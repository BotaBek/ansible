---
# Red Hat Insights has recommended one or more actions for you, a system administrator, to review and if you
# deem appropriate, deploy on your systems running Red Hat software. Based on the analysis, we have automatically
# generated an Ansible Playbook for you. Please review and test the recommended actions and the Playbook as
# they may contain configuration changes, updates, reboots and/or other changes to your systems. Red Hat is not
# responsible for any adverse outcomes related to these recommendations or Playbooks.
#
# Addresses maintenance plan 19565 (phils-demo-plan)
# https://access.redhat.com/insights/planner/19565
# Generated by Red Hat Insights on Mon, 22 May 2017 11:15:26 GMT
# Warning: Some of the rules in the plan do not have Ansible support and this playbook does not address them!

# Kernel vulnerable to local privilege escalation via n_hdlc module (CVE-2017-2636)
# Identifier: (CVE_2017_2636_kernel|KERNEL_CVE_2017_2636,105,mitigate)
# Version: 73ce59d190b34351078f6e89f80851427ca7b800
- name: Disable n_hdlc kernel module
  hosts: "all"
  become: true

  tasks:
    # While this module may already be disabled in a different file,
    # create a blacklist file explicitly for this issue.
    - name: Blacklisting the n_hdlc module
      lineinfile:
        dest: /etc/modprobe.d/disable-n_hdlc.conf
        line: "install n_hdlc /bin/true"
        owner: root
        group: root
        mode: 0644
        state: present
        create: yes

    # Ensure that the module is not currently loaded
    - name: Checking loaded modules
      command: awk /^n_hdlc/ /proc/modules
      register: loaded_modules
      changed_when: false
      check_mode: no

    # If the module was found, a reboot is necessary
    - when: "{{ loaded_modules.stdout | default('') | search('n_hdlc') }}"
      block:
        - name: Reboot if module was loaded
          shell: shutdown -r now "Ansible triggered reboot"
          async: 1
          poll: 0
          ignore_errors: true

        - name: Wait for system to boot up
          local_action: wait_for host={{ inventory_hostname }} port=22 state=started delay=15 timeout=300
          become: false



# Kernel vulnerable to local privilege escalation via DCCP module (CVE-2017-6074)
# Identifier: (CVE_2017_6074_kernel|KERNEL_CVE_2017_6074,105,mitigate)
# Version: 16b760db998742e8ffd1b636178f77d8768ed416
- name: Disable DCCP kernel module
  hosts: "barnsley.philredhat.com"
  become: true


# Note: It is possible that the issue could be mitigated by enabling
# SELinux, e.g. if the system has a sufficient policy but is in
# permissive mode, but disabling dccp is less disruptive to mitigate
# just this issue.

  tasks:
    - name: Blacklist the dccp module
      lineinfile:
        dest: /etc/modprobe.d/disable-dccp.conf
        line: "install dccp /bin/true"
        owner: root
        group: root
        mode: 0644
        state: present
        create: yes

    - name: Attempt to remove the dccp module
      command: modprobe -r dccp
      register: modprobe_result
      ignore_errors: true

    - when: modprobe_result|failed
      block:
        - name: Unable to remove loaded module; Rebooting
          shell: shutdown -r now "Ansible triggered reboot"
          async: 1
          poll: 0
          ignore_errors: true

        - name: Wait for system to boot up
          local_action: wait_for host={{ inventory_hostname }} port=22 state=started delay=15 timeout=300
          become: false



# Decreased security in NFS server settings
# Identifier: (hardening_nfs|NFS_HARDENING,105,fix)
# Version: c988b9061f0c3720900ae391d72a59a89bf57294
- name: Remove no_root_squash from all NFS exports files
  hosts: "barnsley.philredhat.com"
  become: true
  tasks:
    - name: Get list of exports files containing no_root_squash
      shell: grep -l "^\s*[^#].*no_root_squash" /etc/exports /etc/exports.d/*
      register: grep
      ignore_errors: true

    - name: Fix when no_root_squash is the first option
      replace:
        backup: yes
        dest: "{{item}}"
        regexp: '\(no_root_squash,'
        replace: '('
      with_items: "{{grep.stdout_lines}}"

    - name: Fix when no_root_squash is elsewhere in the option list
      replace:
        backup: yes
        dest: "{{item}}"
        regexp: ',*no_root_squash'
        replace: ''
      with_items: "{{grep.stdout_lines}}"


- name: run insights
  hosts: barnsley.philredhat.com
  become: True
  tasks:
    - name: run insights
      command: redhat-access-insights
      changed_when: false
