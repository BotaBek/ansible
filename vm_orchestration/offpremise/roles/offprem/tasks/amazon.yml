# vim:ft=ansible:
---

   - block:
     - name: 'Create Amazon VM Instance(s)'
       ec2:
         key_name: "ansible-tower"
         #aws_access_key: "{{ AWS_ACCESS_KEY|default(lookup('env', 'AWS_ACCESS_KEY')) }}"
         #aws_secret_key: "{{ AWS_SECRET_KEY|default(lookup('env', 'AWS_SECRET_KEY')) }}"
         region: eu-west-1
         zone: eu-west-1b
         instance_type: t2.micro
         image: ami-2bc3a858
         wait: yes
         group: launch-wizard-1
         vpc_subnet_id: subnet-0f120178
         assign_public_ip: yes
         monitoring: no
         count: "{{vm_env_instances}}"
         state: present
       register: newmachines

     - name: Wait for SSH to start
       wait_for:
         host: "{{ newmachines.instances[0].public_ip }}"
         port: 22
         timeout: 300
       delegate_to: localhost

     - name: Add the machine to in memory inventory
       add_host:
         hostname: "{{ newmachines.instances[0].public_ip }}"
         groups: amazon

     - name: Configure instance hostname
       set_fact: hostname_to_use={{ vm_hostname }}
       tags:
         - config

     - name: Pull bootstrap.py script
       git: repo=https://github.com/Katello/katello-client-bootstrap.git dest=/tmp/bootstrap
       tags:
         - git

     - name: Run bootstrap.py and attach to our satellite
       command: >
        /usr/bin/python /tmp/bootstrap/bootstrap.py
        -l '{{ SAT6_USERNAME }}'
        -p '{{ SAT6_PASSWORD }}'
        -a '{{ ACTIVATION_KEY }}'
        -o '{{ SAT6_ORG }}'
        -g '{{ HOSTGROUP }}'
        --location='{{ AWS_LOCATION }}'
        --server='{{ SATELLITE_FQDN }}'
       tags:
         - git
         
     when: '"create" in vm_env_action'
     become_method: sudo
     become: yes
     ignore_errors: no


   - block:
     - name: 'Destroy Amazon VM instance(s)'
       shell: /bin/true

     when: '"destroy" in vm_env_action'
     become: no
